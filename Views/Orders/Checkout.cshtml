@model TabloX2.Models.CheckoutViewModel

@{
    ViewData["Title"] = "Ödeme";
}

<link rel="stylesheet" href="/css/checkout-custom.css">
@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
}

<div class="checkout-2col-outer">
    <div class="checkout-2col-box">
        <div class="checkout-cart-summary">
            <div class="checkout-cart-info">
                <svg width="16" height="16" fill="none"><path d="M8 1.5a3.5 3.5 0 0 1 3.5 3.5v2h.75A1.75 1.75 0 0 1 14 8.75v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-3.5A1.75 1.75 0 0 1 3.75 7h.75v-2A3.5 3.5 0 0 1 8 1.5Zm0 1.5A2 2 0 0 0 6 5v2h4V5a2 2 0 0 0-2-2Zm4 5.25H4A.75.75 0 0 0 3.25 8.75v3.5c0 .414.336.75.75.75h8.5a.75.75 0 0 0 .75-.75v-3.5A.75.75 0 0 0 12 8.25Z" fill="#6B7280"/></svg>
                <span>Sepet Özeti</span>
            </div>
            <h3 class="checkout-title">Sepetim</h3>
            @if (ViewBag.Cart != null && ViewBag.Cart.Items != null && ViewBag.Cart.Items.Count > 0)
            {
                foreach (var item in ViewBag.Cart.Items)
                {
                    <div class="cart-item">
                        <img src="@item.Artwork?.ImageUrl" alt="@item.Artwork?.Title" class="cart-item-img" />
                        <div>
                            <div class="cart-item-title">@item.Artwork?.Title</div>
                            <div class="cart-item-artist">@item.Artwork?.Artist?.Name</div>
                            <div class="cart-item-price">@item.Artwork?.Price.ToString("C0")</div>
                        </div>
                    </div>
                }
                <hr style="margin: 10px 0;" />
                <div class="cart-summary-total" style="display: flex; flex-direction: column; gap: 2px;">
                    <div style="display: flex; justify-content: space-between;">
                        <span>Ara Toplam</span>
                        <span>@Model.SubTotal.ToString("C0")</span>
                    </div>
                    <div style="display: flex; justify-content: space-between;">
                        <span>KDV (%18)</span>
                        <span>@Model.Tax.ToString("C0")</span>
                    </div>
                    <div style="display: flex; justify-content: space-between; font-weight: bold;">
                        <span>Toplam</span>
                        <span>@Model.Total.ToString("C0")</span>
                    </div>
                </div>
            }
            else
            {
                <div class="cart-empty">Sepetiniz boş.</div>
            }
        </div>
        <div class="checkout-stripe-box">
            <div class="checkout-ssl-info">
                <svg width="16" height="16" fill="none"><path d="M8 1.5a3.5 3.5 0 0 1 3.5 3.5v2h.75A1.75 1.75 0 0 1 14 8.75v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-3.5A1.75 1.75 0 0 1 3.75 7h.75v-2A3.5 3.5 0 0 1 8 1.5Zm0 1.5A2 2 0 0 0 6 5v2h4V5a2 2 0 0 0-2-2Zm4 5.25H4A.75.75 0 0 0 3.25 8.75v3.5c0 .414.336.75.75.75h8.5a.75.75 0 0 0 .75-.75v-3.5A.75.75 0 0 0 12 8.25Z" fill="#6B7280"/></svg>
                <span>Güvenli ödeme</span>
            </div>
            <h3 class="checkout-title">Ödeme Bilgileri</h3>
            <form id="checkoutForm" method="post" autocomplete="off">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" style="margin-bottom: 20px; margin-top: 10px;">
                        <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                        </ul>
                    </div>
                }
                <div class="checkout-field">
                    <label class="checkout-label">Ad</label>
                    <input type="text" class="checkout-input" name="FirstName" value="@Model.FirstName" required />
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">Soyad</label>
                    <input type="text" class="checkout-input" name="LastName" value="@Model.LastName" required />
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">E-posta</label>
                    <input type="email" class="checkout-input" name="Email" value="@Model.Email" required />
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">Telefon</label>
                    <input type="tel" class="checkout-input" name="Phone" id="phone" value="@Model.Phone" maxlength="14" placeholder="555 555 55 55" required />
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">Ülke</label>
                    <select class="checkout-input" name="Country" id="countrySelect" required>
                        <option value="TR" selected>Türkiye</option>
                        <option value="US">Amerika Birleşik Devletleri</option>
                        <option value="GB">Birleşik Krallık</option>
                        <option value="DE">Almanya</option>
                        <option value="FR">Fransa</option>
                        <option value="IT">İtalya</option>
                        <option value="ES">İspanya</option>
                        <option value="NL">Hollanda</option>
                        <option value="CA">Kanada</option>
                        <option value="AU">Avustralya</option>
                        <option value="">Diğer</option>
                    </select>
                </div>
                <div id="addressFields">
                    <div class="checkout-field">
                        <label class="checkout-label">Adres</label>
                        <input type="text" class="checkout-input" name="Address" value="@Model.Address" required />
                    </div>
                    <div class="checkout-row" id="trFields">
                        <div class="checkout-field">
                            <label class="checkout-label">İl</label>
                            <input type="text" class="checkout-input" name="City" value="@Model.City" required />
                        </div>
                        <div class="checkout-field">
                            <label class="checkout-label">İlçe</label>
                            <input type="text" class="checkout-input" name="District" value="@Model.District" required />
                        </div>
                    </div>
                    <div class="checkout-row d-none" id="otherFields">
                        <div class="checkout-field">
                            <label class="checkout-label">Eyalet/Bölge</label>
                            <input type="text" class="checkout-input" name="State" />
                        </div>
                        <div class="checkout-field">
                            <label class="checkout-label">Şehir</label>
                            <input type="text" class="checkout-input" name="OtherCity" />
                        </div>
                    </div>
                    <div class="checkout-field">
                        <label class="checkout-label">Posta Kodu</label>
                        <input type="text" class="checkout-input" name="PostalCode" id="postalCode" value="@Model.PostalCode" maxlength="10" required />
                    </div>
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">Kart Üzerindeki İsim</label>
                    <input type="text" class="checkout-input" name="CardHolder" id="cardName" placeholder="Ad Soyad" autocomplete="cc-name" required>
                </div>
                <div class="checkout-field">
                    <label class="checkout-label">Kart Numarası</label>
                    <div class="checkout-card-input-group">
                        <input type="text" class="checkout-input" name="CardNumber" id="cardNumber" maxlength="19" placeholder="1234 5678 9012 3456" autocomplete="cc-number" required>
                        <span class="checkout-card-icon" id="cardTypeIcon">
                            <img id="cardTypeImg" src="/img/card-generic.svg" alt="">
                        </span>
                    </div>
                    <div class="checkout-error" id="cardNumberError"></div>
                </div>
                <div class="checkout-row">
                    <div class="checkout-field">
                        <label class="checkout-label">Son Kullanma</label>
                        <input type="text" class="checkout-input" name="CardExpiry" id="cardExpiry" maxlength="5" placeholder="AA/YY" autocomplete="cc-exp" required>
                    </div>
                    <div class="checkout-field">
                        <label class="checkout-label">CVC</label>
                        <input type="text" class="checkout-input" name="CardCvv" id="cardCvc" maxlength="4" placeholder="CVC" autocomplete="cc-csc" required>
                    </div>
                </div>
                <input type="hidden" name="PaymentMethod" value="CreditCard" />
                <button type="submit" class="checkout-btn btn-tablox-red" id="checkoutBtn">Ödemeyi Tamamla</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"></script>
    <script>
        // Kart tipi algılama ve ikon gösterme
        const cardTypeImg = document.getElementById('cardTypeImg');
        const cardNumberInput = document.getElementById('cardNumber');
        const cardNumberError = document.getElementById('cardNumberError');
        const checkoutBtn = document.getElementById('checkoutBtn');

        cardNumberInput.addEventListener('input', function(e) {
            let val = e.target.value.replace(/\D/g, '');
            let type = 'generic';
            if (/^4/.test(val)) type = 'visa';
            else if (/^5[1-5]/.test(val)) type = 'mastercard';
            else if (/^3[47]/.test(val)) type = 'amex';
            cardTypeImg.src = '/img/card-' + type + '.svg';
            cardTypeImg.alt = "";
            let newVal = '';
            for (let i = 0; i < val.length; i++) {
                if (i > 0 && i % 4 === 0) newVal += ' ';
                newVal += val[i];
            }
            e.target.value = newVal;
            if (val.length >= 13 && !luhnCheck(val)) {
                cardNumberError.textContent = "Geçersiz kart numarası";
                checkoutBtn.disabled = true;
            } else {
                cardNumberError.textContent = "";
                checkoutBtn.disabled = val.length < 13 || !luhnCheck(val);
            }
        });
        document.getElementById('cardExpiry').addEventListener('input', function(e) {
            let val = e.target.value.replace(/\D/g, '');
            if (val.length >= 2) {
                val = val.slice(0,2) + '/' + val.slice(2);
            }
            e.target.value = val;
        });

        // intl-tel-input başlat
        var phoneInput = document.querySelector("#phone");
        var iti = window.intlTelInput(phoneInput, {
            initialCountry: "tr",
            preferredCountries: ["tr", "us", "gb", "de", "fr"],
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
            nationalMode: true,
            formatOnDisplay: true
        });

        // Ülke seçimi ile telefon inputunu güncelle
        document.getElementById('countrySelect').addEventListener('change', function() {
            var country = this.value.toLowerCase();
            if (country) iti.setCountry(country);
            // Adres alanlarını değiştir
            if (country === 'tr') {
                document.getElementById('trFields').classList.remove('d-none');
                document.getElementById('otherFields').classList.add('d-none');
            } else {
                document.getElementById('trFields').classList.add('d-none');
                document.getElementById('otherFields').classList.remove('d-none');
            }
        });
        // Sadece Türkiye için maske uygula
        phoneInput.addEventListener('input', function(e) {
            var country = iti.getSelectedCountryData().iso2;
            if (country === 'tr') {
                let val = this.value.replace(/\D/g, '');
                if (val.length > 10) val = val.slice(0, 10);
                let masked = '';
                if (val.length > 0) masked = val.substring(0, 3);
                if (val.length > 3) masked += ' ' + val.substring(3, 6);
                if (val.length > 6) masked += ' ' + val.substring(6, 8);
                if (val.length > 8) masked += ' ' + val.substring(8, 10);
                this.value = masked;
            }
        });
        phoneInput.addEventListener('keypress', function(e) {
            if (!/[0-9]/.test(e.key)) e.preventDefault();
        });
        phoneInput.addEventListener('countrychange', function() {
            this.value = '';
        });
        // Form gönderimi
        document.getElementById('checkoutForm').addEventListener('submit', function(e) {
            var phoneNumber = iti.getNumber();
            if (!iti.isValidNumber()) {
                e.preventDefault();
                alert("Lütfen geçerli bir telefon numarası giriniz.");
                return false;
            }
            phoneInput.value = phoneNumber;
        });

        function luhnCheck(val) {
            let sum = 0;
            let shouldDouble = false;
            for (let i = val.length - 1; i >= 0; i--) {
                let digit = parseInt(val.charAt(i));
                if (shouldDouble) {
                    if ((digit *= 2) > 9) digit -= 9;
                }
                sum += digit;
                shouldDouble = !shouldDouble;
            }
            return (sum % 10) === 0;
        }

        // Posta kodu sadece rakam
        const postalCodeInput = document.getElementById('postalCode');
        postalCodeInput.addEventListener('input', function(e) {
            this.value = this.value.replace(/\D/g, '');
        });
        postalCodeInput.addEventListener('keypress', function(e) {
            if (!/[0-9]/.test(e.key)) e.preventDefault();
        });
    </script>
} 